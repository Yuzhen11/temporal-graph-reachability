nclude <iostream>
#include <algorithm>
#include <vector>
#include <fstream>
#include <queue>
#include <string>
#include <cstring>
#include <assert.h>
#include <set>
#include "Timer.h"
using namespace std;
vector<vector<int> > v;
vector<vector<int> > vr;
int n, m;
vector<int> ind;
vector<int> outd;
vector<int> Lup;
vector<int> Ldown;

void readGraph(string s)
{
	timer.start();
	fstream in;
	in.open(s.c_str(), ios::in);
	in >> n >> m;
	v.resize(n);
	vr.resize(n);
	ind.resize(n);
	outd.resize(n);
	
	int u;int size;int to;
	while(in >> u)
	{
		in >> size;
		for (int i = 0; i < size; ++ i)
		{
			in >> to;
			v[u].push_back(to);
			vr[to].push_back(u);
			outd[u]++;
			ind[to]++;
		} 
	}
	in.close();
	timer.stop();
	cout << "read graph time: " << timer.GetRuntime() << endl;
	
	cout << "load done." << endl;
}

void feline()
{
    stack<int> stack1;
    stack<int> stack2;
    for (int i = 0; i < n; ++ i)
    {

    }
}

int main()
{

}
